swagger: '2.0'
info:
  title: Popsical API
  version: "2"

  description: |
    Version 1
    --

    all endpoints path must be prefixed with `/v2`

    e.g https://api.popsical.tv/v1/genres.json

    Authentication
    --------------

    Popsical API uses OAuth2 to issue access token.

    All apps/client needs to be registered in order to access Popsical API endpoints.

    Once registered, you will receive

    `client_id` - Api Key as identifier of your app

    `secret` - Secret Key

    `callback_url` - as specified by client

    Pagination
    ---------

    Resources with meta object indicates the resource endpoint has pagination. For example the following:

    ```JSON
    {
      "resources": [],
      ..
      ..
      "meta": {
        "total": 3,
        "current_page": 1,
        "num_pages": 1,
        "per_page": 25
      }
    }
    ```


    `total` - total entries of items.

    `current_page` - the current page.

    `per_page` - load number of items per page. Default is set to 25 items.

    `num_pages` - number of pages available to paginate.


    You can use the following query paramters to paginate the resource and load 4 items per page

    `/v1/resources.json?per_page=4&page=2`


    Errors
    ------

    A failed call will always result in either HTTP status code of >= 400 or 500. Failed JSON requests will also contain a response containing an error message and error code:

    ```JSON
      { error: 'not found', err_code: 1404 }
    ```

    Code defensively and do not assume err_code will always be present. If you get a return without a err_code please tell us so that we can include one.


    Custom err_code
    ------------------

    1400 - missing parameters

    1404 - not found error

    1401 - not authorized

    1403 - forbidden

    1407 - entity validation error e.g uniqueness (value already taken), presence validation errors

    1408 - TV IP address is not available

    1409 - Play token generation failed

    1410 - Play token authorization failed

    1411 - Language code does not exist

    1412 - Track already exist in play queue.

    1500 - Internal server error

    Search
    ------

    We use algolia for search. Please refer to algolia API docs to perform search https://www.algolia.com/doc/rest-api/search/

    Requires Algolia API key to perform search.

# the domain of the service
host: api-staging.popsical.tv
# array of all schemes that your API supports
schemes:
  - https

# will be prefixed to all paths
basePath: /v2

securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://api-staging.popsical.tv/oauth/authorize'
    tokenUrl: 'https://api-staging.popsical.tv/oauth/token'
    scopes:
      public: "all public access"
      manage: "user resources"
      remote_mode: "device use as remote control for the TV"

produces:
  - application/json

consumes:
  - application/json

paths:
  /genres.json:
    get:
      summary: Lookup available genres
      description: |
        Recommended usage:

        Treat this as a reference endpoint so you can call this once and store locally as a hash table
      tags:
        - Genre
        - Meta
      responses:
        200:
          description: Object of genres available
          examples:
            application/json:
              {"pop":{"name":{"en":"Pop","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/pop.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_pop.png"},"rock":{"name":{"en":"Rock","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/rock.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_rock.png"},"r\u0026b":{"name":{"en":"R\u0026B","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/R_B.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_r_n_b.png"},"country":{"name":{"en":"Country","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/country.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_country.png"},"rap":{"name":{"en":"Hip Hop","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/hip_hop.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_hip_hop.png"},"dance":{"name":{"en":"Dance","zh":""},"poster_url":"https://charaku.imgix.net/defaults/genre_bg/dance.jpg","icon_url":"https://charaku.imgix.net/defaults/genre_icons/ic_dance.png"}}

definitions:
  AuthToken:
    type: object
    properties:
      short_code:
        type: string
        description: Short code to display on the TV
      nonce:
        type: string
        description: Secure key to verify short code
      verification_url:
        type: string
        description: Url for user to go to verify account & TV
      expires_in:
        type: integer
        description: Value in seconds until auth token expires
  AuthTokenPost:
    type: object
    properties:
      short_code:
        type: string
        description: Short code displayed on TV
      nonce:
        type: string
        description: Secure key to verify short code
      device_id:
        type: string
        description: Your mobile android unique id
      client_id:
        type: string
        description: Your app oauth client id
  AuthTokenPostFB:
    type: object
    properties:
      facebook_token:
        type: string
        description: Facebook token
      device_id:
        type: string
        description: Your mobile android unique id
      client_id:
        type: string
        description: Your app oauth client id
      scope:
        type: string
        description: Oauth scope permission e.g public remote_mode
  AccessToken:
    type: object
    properties:
      access_token:
        type: string
        description: Include this in header -H Authorization Bearer access_token
      refresh_token:
        type: string
        description: Use refresh token when access_token has expired
      expires_in:
        type: string
        description: timestamp of access token expiry
      scope:
        type: string
        description: Scope allowed accessing resources
  AccessTokenTV:
    title: AccessTokenTv
    type: object
    allOf:
      - $ref: '#/definitions/AccessToken'
      - properties:
          tv_ip_address:
            type: string
          tv_port:
            type: integer
  User:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      profile_pic:
        type: string
      profiles:
        $ref: '#/definitions/Profile'
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
  Profile:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
        description: profile name
      playlist_id:
        type: integer
        description: User has 1 default playlist id
      urls:
        type: string
        properties:
          playlists:
            type: string
            description: user playlists url
  Device:
    type: object
    properties:
      device_uid:
        type: string
        description: unique mobile device identifier
      ip_address:
        type: string
      port:
        type: integer
      os:
        type: string
      os_version:
        type: string

  DevicePost:
    type: object
    properties:
      device:
        $ref: '#/definitions/Device'

  Playlist:
    type: object
    properties:
      id:
        type: integer
        description: identifier of playlist. Use this id to fetch playlist object
      profile_id:
        type: integer
        description: profile_id 0 means internal generated id
      created_at:
        type: string
        format: date-time
        description: timestamp of creation in iso8601 timestamp format
      updated_at:
        type: string
        format: date-time
        description: timestamp of last updated in iso8601 timestamp format
      position:
        type: integer

  Track:
    type: object
    properties:
      id:
        type: integer
      number:
        type: integer
        description: track number in the album (if available)
      title:
        type: string
        description: track title
      alt_title:
        type: string
        description: alternate title, used for search index
      lang_code:
        type: string
        description: language code of the track e.g en
      runtime:
        type: integer
        description: duration in seconds
      release_date:
        type: string
        format: date
        description: track release date
      has_video:
        type: boolean
        description: flag to indicate track has video
      genres:
        type: array
        items:
          type: string
      images:
        $ref: '#/definitions/Image'
      musixmatch_id:
        type: integer
      musixmatch_lyrics_id:
        type: integer
      musixmatch_subtitle_id:
        type: integer
      video:
        $ref: '#/definitions/Video'
      artists:
        type: array
        items:
          $ref: '#/definitions/Artist'
      block:
        type: boolean
        description: true indicates track video can't be viewed due to Rules

  Image:
    type: object
    properties:
      poster:
        type: object
        properties:
          url:
            type: string
            description: url of the image.

  Video:
    type: object
    properties:
      id:
        type: integer
      artist_id:
        type: integer
      title:
        type: string
        description: video title
      has_stream:
        type: boolean
        description: a flag to indicate whether video has encoded stream
      images:
        $ref: '#/definitions/Image'
      dash:
        type: object
        properties:
          p720:
            type: string
            description: mpeg-dash url of the stream
      hls:
        type: object
        properties:
          p720:
            type: string
            description: hls url of the tream

  Artist:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      gender:
        type: string
      lang_codes:
        type: array
        items:
          type: string
          description: artist can have more than 1 language codes e.g 'en', 'zh'
      images:
        $ref: '#/definitions/Image'
      musixmatch_id:
        type: integer

  PlayQueue:
    type: object
    properties:
      user_id:
        type: integer
      updated_at:
        type: string
        format: date-time
      current:
        $ref: '#/definitions/PlayQueueObj'
      prev:
        type: array
        items:
          $ref: '#/definitions/PlayQueueObj'
      next:
        type: array
        items:
          $ref: '#/definitions/PlayQueueObj'
      priority:
        type: array
        items:
          $ref: '#/definitions/PlayQueueObj'
      playlist_id:
        type: integer
        description: playlist id which the tracks belong to.
      total_forward:
        type: integer
        description: total number of items to be played next (excluding previous played items)
      total:
        type: integer
        description: total number of all items in the play queue
      meta:
        type: object
        properties:
          total:
            type: integer
            description: Total number of items
          current_page:
            type: integer
            description: Current page
          num_pages:
            type: integer
            description: Total of number of pages available to paginate
          per_page:
            type: integer
            description: Number of items available per page

  PlayQueueObj:
    type: object
    properties:
      play_queue_track_id:
        type: integer
      track:
        $ref: '#/definitions/Track'
      position:
        type: integer
      added_by:
        type: object
        properties:
          name:
            type: string
            description: name of user
          profile_pic:
            type: string
            description: url of image

  Pagination:
    type: object
    properties:
      meta:
        type: object
        properties:
          total:
            type: integer
            description: Total number of items
          current_page:
            type: integer
            description: Current page
          num_pages:
            type: integer
            description: Total of number of pages available to paginate
          per_page:
            type: integer
            description: Number of items available per page

  Error:
    type: object
    properties:
      error:
        type: string
        description: Not authorized
      err_code:
        type: integer
        description: refer to internal error codes

# define reusable parameters:
parameters:
  perPageParams:
    name: per_page
    in: query
    description: Number of playlist returned
    type: integer
    required: false
  pageParams:
    name: page
    in: query
    description: Page number
    type: integer
    required: false
  playlistIncludesParams:
    name: includes
    in: query
    description: Eager load tracks in each playlist. e.g `includes=tracks`
    type: string
    required: false
  playlistLangParams:
    name: lang
    in: query
    description: language code e.g `en`, `ms`, `zh`
    type: string
    required: false
  playlistGenreParams:
    name: genres
    in: query
    description: genres e.g `pop`, `duet`, `90s`, `80s`
    type: string
    required: false
  playlistArtistParams:
    name: artist_gender
    in: query
    description: valid values e.g 'm', 'f', 'mixed'
    required: false
    type: string