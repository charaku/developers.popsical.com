{"swagger":"2.0","info":{"title":"Popsical API","version":"2","description":"Version 2\n--\n\nall endpoints path must be prefixed with `/v2`\n\ne.g https://api.popsical.tv/v2/genres.json\n\nAuthentication\n--------------\n\nPopsical API uses OAuth2 to issue access token.\n\nAll apps/client needs to be registered in order to access Popsical API endpoints.\n\nOnce registered, you will receive\n\n`client_id` - Api Key as identifier of your app\n\n`secret` - Secret Key\n\n`callback_url` - as specified by client\n\nPagination\n---------\n\nResources with meta object indicates the resource endpoint has pagination. For example the following:\n\n```JSON\n{\n  \"resources\": [],\n  ..\n  ..\n  \"meta\": {\n    \"total\": 3,\n    \"current_page\": 1,\n    \"num_pages\": 1,\n    \"per_page\": 25\n  }\n}\n```\n\n\n`total` - total entries of items.\n\n`current_page` - the current page.\n\n`per_page` - load number of items per page. Default is set to 25 items.\n\n`num_pages` - number of pages available to paginate.\n\n\nYou can use the following query paramters to paginate the resource and load 4 items per page\n\n`/v1/resources.json?per_page=4&page=2`\n\n\nErrors\n------\n\nA failed call will always result in either HTTP status code of >= 400 or 500. Failed JSON requests will also contain a response containing an error message and error code:\n\n```JSON\n  { error: 'not found', err_code: 1404 }\n```\n\nCode defensively and do not assume err_code will always be present. If you get a return without a err_code please tell us so that we can include one.\n\n\nCustom err_code\n------------------\n\n1400 - missing parameters\n\n1404 - not found error\n\n1401 - not authorized\n\n1403 - forbidden\n\n1407 - entity validation error e.g uniqueness (value already taken), presence validation errors\n\n1408 - TV IP address is not available\n\n1409 - Play token generation failed\n\n1410 - Play token authorization failed\n\n1411 - Language code does not exist\n\n1412 - Track already exist in play queue.\n\n1413 - TV Device ID is missing\n\n1500 - Internal server error\n\nSearch\n------\n\nWe use algolia for search. Please refer to algolia API docs to perform search https://www.algolia.com/doc/rest-api/search/\n\nRequires Algolia API key to perform search.\n"},"host":"api-staging.popsical.tv","schemes":["https"],"basePath":"/v2","securityDefinitions":{"OauthSecurity":{"type":"oauth2","flow":"accessCode","authorizationUrl":"https://api-staging.popsical.tv/oauth/authorize","tokenUrl":"https://api-staging.popsical.tv/oauth/token","scopes":{"public":"all public access","manage":"user resources","remote_mode":"device use as remote control for the TV"}}},"produces":["application/json"],"consumes":["application/json"],"paths":{"/genres.json":{"get":{"summary":"Lookup available genres","description":"Returns all valid genres in collection\n","tags":["Genre","Meta"],"security":[{"OauthSecurity":["public"]}],"parameters":[{"$ref":"#/parameters/playlistLangParams"}],"responses":{"200":{"description":"Object with genres array & meta pagination information","schema":{"type":"object","properties":{"genres":{"type":"array","items":{"$ref":"#/definitions/Genre"}},"meta":{"$ref":"#/definitions/Pagination"}}}}}}}},"definitions":{"Genre":{"type":"object","properties":{"name":{"type":"string","description":"genre name","example":"rock"},"poster_url":{"type":"string","description":"poster URL","example":"https://charaku.imgix.net/defaults/genre_bg/rock.jpg?auto=compress"},"icon_url":{"type":"string","example":"https://charaku.imgix.net/defaults/genre_icons/ic_rock.png?auto=compress"},"genre_langs":{"type":"object","properties":{"en":{"type":"string","description":"genre lang code with genre name","example":"Rock"},"zh":{"type":"string","description":"genre lang code with genre name","example":"摇滚"},"zt":{"type":"string","description":"genre lang code with genre name","example":"搖滾"}}}}},"Pagination":{"type":"object","properties":{"meta":{"type":"object","properties":{"total":{"type":"integer","description":"Total number of items"},"current_page":{"type":"integer","description":"Current page"},"num_pages":{"type":"integer","description":"Total of number of pages available to paginate"},"per_page":{"type":"integer","description":"Number of items available per page"}}}}},"Success":{"type":"object","properties":{"success":{"type":"string","description":"Success","example":"ok"}}},"Error":{"type":"object","properties":{"errors":{"type":"string","description":"Not authorized"},"err_code":{"type":"integer","description":"refer to internal error codes"}}},"ErrorUnauthorized":{"type":"object","properties":{"errors":{"type":"string","description":"Not authorized","example":"Not authorized"},"err_code":{"type":"integer","description":"refer to internal error codes","example":1401}}},"ErrorForbidden":{"type":"object","properties":{"errors":{"type":"string","description":"Forbidden","example":"forbidden"},"err_code":{"type":"integer","description":"refer to internal error codes","example":1403}}},"ErrorNotFound":{"type":"object","properties":{"errors":{"type":"string","description":"Not found","example":"not found"},"err_code":{"type":"integer","description":"refer to internal error codes","example":1404}}},"ErrorUnprocessable":{"type":"object","properties":{"errors":{"type":"string","description":"Model validation error","example":"not found"},"err_code":{"type":"integer","description":"refer to internal error codes","example":1407}}}},"parameters":{"perPageParams":{"name":"per_page","in":"query","description":"Number of playlist returned","type":"integer","required":false},"pageParams":{"name":"page","in":"query","description":"Page number","type":"integer","required":false},"playlistIncludesParams":{"name":"includes","in":"query","description":"Eager load tracks in each playlist. e.g `includes=tracks`","type":"string","required":false},"playlistLangParams":{"name":"lang","in":"query","description":"language code e.g `en`, `ms`, `zh`","type":"string","required":false},"playlistGenreParams":{"name":"genres","in":"query","description":"genres e.g `pop`, `rock`, `rap`, `jazz`","type":"string","required":false},"playlistArtistParams":{"name":"artist_gender","in":"query","description":"valid values e.g 'm', 'f', 'mixed'","required":false,"type":"string"},"includeBodyParams":{"name":"include_body","in":"query","description":"Return play_queue body in response","type":"boolean","required":false}}}